<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml"
    title="Wyniki testu" layout="vertical" horizontalAlign="center"
    backgroundColor="white" backgroundAlpha="1.0"
    borderColor="#D0D0E0" borderAlpha="1.0"
    showCloseButton="false" close="closeWindow()"
    creationComplete="init()">

    <mx:HTTPService id="getHighscoreRequiredSpeedService"
        url="http://sigma.ug.edu.pl/~mdettla/typing_test/web/service/highscore.php"
        resultFormat="e4x" />

    <mx:HTTPService id="submitHighscoreService"
        url="http://sigma.ug.edu.pl/~mdettla/typing_test/web/service/highscore.php"
        method="POST" />

    <mx:states>
        <mx:State name="HighscoreAchieved">
            <mx:AddChild>
                <mx:VBox>
                    <mx:Label text="Gratulacje!"
                        fontSize="14" fontWeight="bold" />
                    <mx:Label text="Uzyskałeś bardzo dobry wynik."
                        fontSize="12" />
                    <mx:Label
                        text="Podaj swoje imię aby trafić na listę najlepszych."
                        fontSize="12" />
                    <mx:Form>
                        <mx:FormItem label="Imię:">
                            <mx:TextInput id="username" />
                        </mx:FormItem>
                        <mx:FormItem id="formButtons" direction="horizontal">
                            <mx:Button id="submitHighscoreButton"
                                label="OK" width="65"
                                click="onSubmitHighscoreButtonClicked()" />
                            <mx:Button id="cancelButton" label="Anuluj"
                                click="closeWindow()" />
                        </mx:FormItem>
                    </mx:Form>
                </mx:VBox>
            </mx:AddChild>

            <mx:RemoveChild target="{okButton}"/>

        </mx:State>
    </mx:states>

    <mx:StringValidator id="usernameValidator"
        source="{username}" property="text"
        requiredFieldError="Imię nie może być puste."
        tooShortError="Imię musi składać się z co najmniej 3 znaków."
        tooLongError="Imię może mieć co najwyżej 32 znaki."
        minLength="3" maxLength="32" />

    <mx:Script>
        <![CDATA[

        import tt.TestResults;

        import com.hurlant.crypto.hash.HMAC;
        import com.hurlant.crypto.hash.IHMAC;
        import com.hurlant.crypto.hash.SHA256;
        import com.hurlant.util.Hex;

        import flash.events.Event;
        import flash.events.KeyboardEvent;
        import flash.external.ExternalInterface;
        import flash.ui.Keyboard;
        import flash.utils.setTimeout;

        import mx.events.FlexEvent;
        import mx.events.ValidationResultEvent;
        import mx.managers.PopUpManager;
        import mx.rpc.events.ResultEvent;

        private var _testResults:TestResults;
        private var hData:String = "";

        private function init():void {
            addEventListener(
                    KeyboardEvent.KEY_DOWN, onKeyDown);
            okButton.addEventListener(
                    FlexEvent.BUTTON_DOWN, onOKButtonClicked);
            getHighscoreRequiredSpeedService.addEventListener(
                    "result", onGetHighscoreRequiredSpeedServiceResult);
        }

        public function set testResults(testResults:TestResults):void {
            this._testResults = testResults;
            resultsText.htmlText = _testResults.toHTMLString();

            getHighscoreRequiredSpeedService.cancel();
            var params:Object = new Object();
            params.q = "get_threshold";
            getHighscoreRequiredSpeedService.send(params);
        }

        private function onGetHighscoreRequiredSpeedServiceResult(
                event:ResultEvent):void {
            const result:XML = XML(event.result);
            hData = result.hData;
            var requiredSpeed:int = int(result.requiredSpeed);
            if (_testResults.realSpeed > requiredSpeed
                    && _testResults.mistakesCount == 0
                    && _testResults.plChars) {
                currentState = "HighscoreAchieved";
                PopUpManager.centerPopUp(this);
                callLater(username.setFocus);
            }
        }

        private function onSubmitHighscoreButtonClicked():void {
            if (usernameValidator.validate().type ==
                    ValidationResultEvent.INVALID) {
                return;
            }
            submitHighscoreService.cancel();
            var params:Object = new Object();
            params.username = username.text;
            params.speed = _testResults.realSpeed.toFixed(1);
            params.mistakes = _testResults.mistakesCount;
            params.corrections = _testResults.correctionsCount;
            params.plChars = _testResults.plChars;
            params.correctChars =
                _testResults.writtenCharsCount - _testResults.mistakesCount;
            params.minutes = int(_testResults.timeMinutes);
            params.seconds = int(_testResults.timeSeconds) % 60;
            params.h = h(hData);
            submitHighscoreService.send(params);
            closeWindow();
            setTimeout(notifyJavaScript, 1000);
        }

        private static function notifyJavaScript():void {
            ExternalInterface.call("updateHighscoreTable");
        }

        private static function h(hData:String):String {
            const hKey:String = "secret2";
            const hmac:IHMAC = new HMAC(new SHA256());
            return Hex.fromArray(hmac.compute(
                        Hex.toArray(Hex.fromString(hKey)),
                        Hex.toArray(Hex.fromString(hData))));
        }

        private function onKeyDown(event:KeyboardEvent):void {
            if (event.keyCode == Keyboard.ESCAPE) {
                closeWindow();
            }
        }

        private function onOKButtonClicked(event:FlexEvent):void {
            closeWindow();
        }

        private function closeWindow():void {
            PopUpManager.removePopUp(this);
        }

        ]]>
    </mx:Script>

    <mx:Text id="resultsText" />

    <mx:Button id="okButton" label="OK" width="65" />

</mx:TitleWindow>
