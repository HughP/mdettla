Proste mechanizmy komunikacji procesów w bash'u

1.
Obejrzeć i wypróbować działanie pary przykładowych skryptów
podanych na wykładzie:

skrypt ojciec:
declare -i x y
echo -n "Podaj liczbę całkowitą:"
read x
syn $x &
y=x*x
wait $!
y=y+$?
echo "Wynik: $y"
exit 0

skrypt syn:
declare -i p
p=$1
p=p*p*p
exit $p

2.
Napisać skrypt, który wczytuje wartości naturalne n, k (0 <=k <=n <=5)
i oblicza wartość (n nad k) metodą współbieżnego obliczania trzech silni:
(n nad k) = n! / (k!(n-k)!)

...
silnia n &
silnia k &
silnia $((n-k)) &
wait .....
wait .....

3.
Podlega odbiorowi

Utworzyć skrypt o dwóch argumentach:
szukaj plik katalog
który (podobnie, jak polecenie find) znajduje wszystkie wystąpienia pliku
o podanej nazwie w poddrzewie katalogów o podanej nazwie ścieżkowej korzenia.

Skrypt powinien działać na zasadzie współbieżnych rekurencyjnych wywołań
dla wszystkich podkatalogów danego katalogu.
Uwaga: w przypadku, gdy skrypt nie znajdzie ani jednego wystąpienia danego
pliku, powinien wyświetlić komunikat "Nie znaleziono" ale TYLKO RAZ.
