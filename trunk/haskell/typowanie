f :: t1 -> t2, x :: t1
----------------------
     (f x) :: t2

f :: [α] -> [α], x :: [Int]
---------------------------
     (f x) :: [Int]

unifikujemy:
[α] =σ [Int]
α =σ Int
σ = {α -> Int}
-- [α] !=σ (Int, Int)

f :: α -> β, x :: ɣ
------------------- σ(α) = σ(ɣ)
   (f x) :: σ(β)


ti(\x -> 2*x) "=" ti(* 2 x)
                     --- -

reguła: ti(x) = {x :: α} |- x :: α
ti(* 2)
ti(*) = Ø |- (*) :: Int -> Int -> Int
ti(2) = Ø |- 2 :: Int
ti(* 2) = Ø |- Int -> Int

σ(α) = σ(ɣ)
α =σ Int       ɣ =σ α'
σ = {α' -> Int}

ti(* 2 x) = {x :: Int} |- (* 2 x) :: Int
